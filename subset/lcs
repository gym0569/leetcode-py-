class Solution(object):
    def findLengthOfLCIS(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        result, count = 0, 0
        for i in xrange(len(nums)):
            if i == 0 or nums[i-1] < nums[i]:
                count += 1
                result = max(result, count)
            else:
                count = 1
        return result


def lengthofLCS(nums1, nums2):
    dp = []
    len1, len2 = len(nums1), len(nums2)
    for i in range(len1 + 1):
        row = []
        for j in range(len2 + 1):
            row.append(0)
        dp.append(row)
    for i in range(1, len1 + 1):
        for j in range(1, len2 + 1):
            if nums1[i - 1] == nums2[j - 1]:
                dp[i][j] = dp[i - 1][j - 1] + 1
            else:
                dp[i][j] = max(dp[i - 1][j], dp[i][j - 1])
    i = len1
    j = len2
    sub = []
    while i != 0 and j != 0:
        if nums1[i - 1] == nums2[j - 1]:
            sub.append(nums1[i - 1])
            i -= 1
            j -= 1
        else:
            if dp[i][j - 1] > dp[i - 1][j]:
                j -= 1
            else:
                i -= 1
    return dp[len1][len2], sub[::-1]

